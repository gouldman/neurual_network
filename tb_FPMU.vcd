$date
	Tue Apr 01 10:40:16 2025
$end
$version
	ModelSim Version 10.4
$end
$timescale
	1ps
$end

$scope module tb_FPMU $end
$var parameter 32 ! SIGN $end
$var parameter 32 " WIDTH $end
$var parameter 32 # FP_POSITIONS $end
$var parameter 32 $ NUM_TESTS $end
$var reg 1 % clk $end
$var reg 1 & rst_n $end
$var reg 8 ' a [7:0] $end
$var reg 8 ( b [7:0] $end
$var reg 8 ) result [7:0] $end
$var reg 8 * expected_result [7:0] $end

$scope task check_result $end
$upscope $end

$scope module dut $end
$var parameter 32 + SIGN $end
$var parameter 32 , WIDTH $end
$var parameter 32 - FP_POSITIONS $end
$var wire 1 . a [7] $end
$var wire 1 / a [6] $end
$var wire 1 0 a [5] $end
$var wire 1 1 a [4] $end
$var wire 1 2 a [3] $end
$var wire 1 3 a [2] $end
$var wire 1 4 a [1] $end
$var wire 1 5 a [0] $end
$var wire 1 6 b [7] $end
$var wire 1 7 b [6] $end
$var wire 1 8 b [5] $end
$var wire 1 9 b [4] $end
$var wire 1 : b [3] $end
$var wire 1 ; b [2] $end
$var wire 1 < b [1] $end
$var wire 1 = b [0] $end
$var reg 8 > result [7:0] $end
$var reg 16 ? product [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0%
0&
b0 '
b0 (
b0 )
bx *
b0 >
b0 ?
b0 !
b1000 "
b100 #
b10100 $
b0 +
b1000 ,
b100 -
05
04
03
02
01
00
0/
0.
0=
0<
0;
0:
09
08
07
06
$end
#5000
1%
#10000
1&
b10000 '
b10100 (
b10100 *
0%
1;
19
11
b101000000 ?
b10100 >
b10100 )
#15000
1%
#20000
b1000 '
b100 (
b10 *
0%
09
12
01
b100000 ?
b10 >
b10 )
#25000
1%
#30000
b11111111 '
b10000 (
b11111111 *
0%
0;
19
15
14
13
11
10
1/
1.
b111111110000 ?
b11111111 >
b11111111 )
#35000
1%
#40000
0%
#45000
1%
#50000
b10100000 '
b110000 (
b11110 *
0%
18
05
04
03
02
01
0/
b1111000000000 ?
b11100000 >
b11100000 )
#55000
1%
#60000
b100100 '
b10000001 (
0%
1=
09
08
16
13
0.
b1001000100100 ?
b100010 >
b100010 )
#65000
1%
#70000
b100010 *
b1001 '
b1100011 (
0%
1<
18
17
06
15
03
12
00
b1101111011 ?
b110111 >
b110111 )
#75000
1%
#80000
b110111 *
b1101 '
b10001101 (
0%
0<
1;
1:
08
07
16
13
b11100101001 ?
b1110010 >
b1110010 )
#85000
1%
#90000
b1110010 *
b1100101 '
b10010 (
0%
0=
1<
0;
0:
19
06
02
10
1/
b11100011010 ?
b1110001 >
b1110001 )
#95000
1%
#100000
b1110001 *
b1 '
b1101 (
0%
1=
0<
1;
1:
09
03
00
0/
b1101 ?
b0 >
b0 )
#105000
1%
#110000
b0 *
b1110110 '
b111101 (
0%
19
18
05
14
13
11
10
1/
b1110000011110 ?
b11000001 >
b11000001 )
#115000
1%
#120000
b11000001 *
b11101101 '
b10001100 (
0%
0=
09
08
16
15
04
12
01
1.
b1000000110011100 ?
b11001 >
b11001 )
#125000
1%
#130000
b11001 *
b11111001 '
b11000110 (
0%
1<
0:
17
03
11
b1100000010010110 ?
b1001 >
b1001 )
#135000
1%
#140000
b1001 *
b11000101 '
b10101010 (
0%
0;
1:
18
07
13
02
01
00
b1000001011010010 ?
b101101 >
b101101 )
#145000
1%
#150000
b101101 *
b11100101 '
b1110111 (
0%
1=
1;
0:
19
17
06
10
b110101001110011 ?
b10100111 >
b10100111 )
#155000
1%
#160000
b10100111 *
b10010 '
b10001111 (
0%
1:
09
08
07
16
05
14
03
11
00
0/
0.
b101000001110 ?
b10100000 >
b10100000 )
#165000
1%
#170000
b10100000 *
b11110010 '
b11001110 (
0%
0=
17
10
1/
1.
b1100001010111100 ?
b101011 >
b101011 )
#175000
1%
#180000
b101011 *
b11101000 '
b11000101 (
0%
1=
0<
0:
04
12
01
b1011001010001000 ?
b101000 >
b101000 )
#185000
1%
#190000
b101000 *
b1011100 '
b10111101 (
0%
1:
19
18
07
13
11
00
0.
b100001111101100 ?
b111110 >
b111110 )
#195000
1%
#200000
b111110 *
b101101 '
b1100101 (
0%
0:
09
17
06
15
01
10
0/
b1000111000001 ?
b11100 >
b11100 )
#205000
1%
#210000
b11100 *
b1100011 '
b1010 (
0%
0=
1<
0;
1:
08
07
14
03
02
1/
b1111011110 ?
b111101 >
b111101 )
#215000
1%
#220000
b111101 *
b10000000 '
b100000 (
0%
0<
0:
18
05
04
00
0/
1.
b1000000000000 ?
b0 >
b0 )
#225000
1%
#230000
b0 *
b10101010 '
b10011101 (
0%
1=
1;
1:
19
08
16
14
12
10
b110100001000010 ?
b10000100 >
b10000100 )
#235000
1%
#240000
b10000100 *
b10010110 '
b10011 (
0%
1<
0;
0:
06
13
02
11
00
b101100100010 ?
b10110010 >
b10110010 )
#245000
1%
#250000
b10110010 *
b1101 '
b1010011 (
0%
17
15
04
12
01
0.
b10000110111 ?
b1000011 >
b1000011 )
#255000
1%
#260000
b1000011 *
